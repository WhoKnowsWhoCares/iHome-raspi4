- id: '1686836176720'
  alias: calendar_sport_event
  description: ''
  triggers:
  - event: start
    offset: '-3:0:0'
    entity_id: calendar.as_frantsev_gmail_com
    trigger: calendar
  conditions:
  - condition: and
    conditions:
    - condition: state
      entity_id: calendar.as_frantsev_gmail_com
      attribute: description
      state: sport
    - condition: state
      entity_id: input_select.home_come_leave
      state: Home
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.day_part
        state: Morning
      - condition: state
        entity_id: input_select.day_part
        state: Day
      - condition: state
        entity_id: input_select.day_part
        state: Evening
  actions:
  - data:
      media_content_type: text
      media_content_id: Через три часа запланирован спорт, не забудьте поесть
      enqueue: play
    target:
      entity_id:
      - media_player.yandex_station_m00tvb710hyxfg
      - media_player.alice_mini_room_ff98f0294a56d19578794aff
    action: media_player.play_media
  mode: single
- id: GitHub push updates
  alias: github_push_updates
  description: Push Updates
  trigger:
  - platform: time
    at: 02:00:00
  condition: []
  action:
  - service: shell_command.pushupdates_to_github
    data: {}
  mode: single
- id: Set theme
  alias: set_theme_at_startup
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: frontend.set_theme
    data:
      name: ios-dark-mode-blue-red
      mode: dark
- id: Database zip
  alias: database_zip
  initial_state: true
  trigger:
  - platform: time
    at: 01:00:00
  action:
  - service: recorder.purge
    data:
      keep_days: 3
      repack: true
- id: Ok to Alarm
  alias: alarm_allowed
  trigger:
  - platform: time
    at: 05:00:00
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.morning_alarm
- id: Not ok to Alarm
  alias: alarm_forbidden
  trigger:
  - platform: time
    at: '12:00:00'
  action:
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.morning_alarm
- id: NFC PhoneCharge
  alias: nfc_phone_charge_scanned
  description: ''
  trigger:
  - platform: tag
    tag_id: 28a20900-9be1-4e79-9b67-7a36c4dd3f21
  condition: []
  action:
  - type: turn_on
    device_id: 77e1896af65516a68096c8cc777f8bea
    entity_id: 133c7fc6edf8770c9c265fc8f51e7484
    domain: switch
  mode: single
- id: Process use High
  alias: process_use_high
  triggers:
  - entity_id:
    - sensor.processor_use_percent
    above: 90
    trigger: numeric_state
    for:
      hours: 0
      minutes: 0
      seconds: 5
  actions:
  - repeat:
      sequence:
      - data:
          message: 'ALERT: Processor usage on raspi4 is high: {{states(''sensor.processor_use_percent'')|int}}%'
        action: notify.telegram
      while:
      - condition: numeric_state
        entity_id: sensor.processor_use_percent
        above: 90
- id: Disk use High
  alias: disk_use_high
  trigger:
  - platform: numeric_state
    entity_id: sensor.disk_use_percent
    above: 80
  action:
  - service: notify.telegram
    data:
      message: 'ALERT: Disk usage on raspi4 is high: {{states(''sensor.disk_use_percent'')|int}}%'
- id: Memory use High
  alias: memory_use_high
  trigger:
  - platform: numeric_state
    entity_id: sensor.memory_use_percent
    above: 90
  action:
  - repeat:
      until:
      - condition: numeric_state
        entity_id: sensor.memory_use_percent
        below: 80
      sequence:
      - service: notify.telegram
        data:
          message: 'ALERT: Memory usage on raspi4 is high: {{states(''sensor.memory_use_percent'')|int}}%'
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
- id: Processor temperature High
  alias: processor_temp_high
  trigger:
  - platform: numeric_state
    entity_id: sensor.processor_temperature
    above: 70
  action:
  - repeat:
      until:
      - condition: numeric_state
        entity_id: sensor.processor_temperature
        below: 70
      sequence:
      - service: notify.telegram
        data:
          message: 'ALERT: Processor temperature on raspi4 is high: {{states(''sensor.processor_temperature'')|int}}C'
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
- id: '1687085624939'
  alias: calendar_event
  description: ''
  triggers:
  - event: start
    offset: -0:30:0
    entity_id: calendar.as_frantsev_gmail_com
    trigger: calendar
  conditions:
  - condition: and
    conditions:
    - condition: not
      conditions:
      - condition: state
        entity_id: calendar.as_frantsev_gmail_com
        attribute: description
        state: sport
    - condition: state
      entity_id: input_select.home_come_leave
      state: Home
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.day_part
        state: Morning
      - condition: state
        entity_id: input_select.day_part
        state: Day
      - condition: state
        entity_id: input_select.day_part
        state: Evening
  actions:
  - data:
      media_content_type: text
      media_content_id: "Через полчаса начнется  {%  if state_attr('sensor.ical_mycalendar_event_0'
        ,'all_day') == false %}\n  {{ state_attr(\"sensor.ical_mycalendar_event_0\",\"summary\")
        }}\n{% else %}\n  событие. Проверьте календарь\n{% endif %} "
      enqueue: play
    target:
      entity_id:
      - media_player.yandex_station_m00tvb710hyxfg
      - media_player.alice_mini_room_ff98f0294a56d19578794aff
    action: media_player.play_media
  mode: single
- id: '1694814595846'
  alias: home_leave
  description: ''
  triggers:
  - entity_id:
    - sensor.miband7
    to: not_home
    trigger: state
  conditions:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.home_come_leave
      state: Away
    - condition: state
      entity_id: sensor.one_plus_wifi_connection
      state: MGTS_GPON_6451
    - condition: state
      entity_id: sensor.one_plus_wifi_connection
      state: MGTS_GPON5_6451
  actions:
  - data:
      options: Away
    target:
      entity_id: input_select.home_come_leave
    action: input_select.set_options
  - data: {}
    action: script.turn_off_everything
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.humidifier_local
  - data:
      message: Looks like you left Home
    action: notify.telegram
  - if:
    - condition: state
      entity_id: binary_sensor.mi_door_sensor_contact
      state: 'on'
    then:
    - action: notify.telegram
      metadata: {}
      data:
        message: Front door opened!
  - if:
    - condition: state
      entity_id: binary_sensor.tuya_balcon_contact
      state: 'on'
    then:
    - action: notify.telegram
      metadata: {}
      data:
        message: Balcon door opened!
  - action: input_select.select_option
    metadata: {}
    data:
      option: None
    target:
      entity_id: input_select.my_place
  mode: single
- id: '1695065460408'
  alias: home_come
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.miband7
    to: hall
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: state
    entity_id:
    - device_tracker.ble_tracker_miband
    to: home
    enabled: false
  - platform: state
    entity_id:
    - device_tracker.asfrantsoneplus
    to: home
    enabled: false
  condition:
  - condition: state
    entity_id: sensor.miband7
    state: hall
    enabled: false
  - condition: state
    entity_id: device_tracker.ble_tracker_miband
    state: home
    enabled: false
  - condition: state
    entity_id: device_tracker.asfrantsoneplus
    state: home
    enabled: false
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.home_come_leave
      state: Home
  action:
  - service: input_select.set_options
    data:
      options: Home
    target:
      entity_id: input_select.home_come_leave
  - service: notify.telegram
    data:
      message: Looks like you are at Home
  mode: single
- id: '1695468411896'
  alias: irrigation_counter
  description: Daily decreased counter and check if its time to refill water for plants
  trigger:
  - platform: time
    at: '12:00:00'
  condition: []
  action:
  - service: input_number.decrement
    data: {}
    target:
      entity_id: input_number.irrigation_timer
  - if:
    - condition: numeric_state
      entity_id: input_number.irrigation_timer
      below: 10
    then:
    - service: notify.telegram
      data:
        message: Похоже пора обновить воду для полива растений
  mode: single
- id: '1714680766786'
  alias: light_room_main
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.move_sensor_p1_occupancy
    to: 'on'
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: light.philips_bulb_0ba9_light
      state: 'off'
    - condition: numeric_state
      entity_id: sensor.move_sensor_p1_illuminance
      below: 20
    - condition: state
      entity_id: input_select.home_come_leave
      state: Home
    then:
    - action: light.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: light.philips_bulb_0ba9_light
  - action: input_select.select_option
    metadata: {}
    data:
      option: Room
    target:
      entity_id: input_select.my_place
  mode: single
- id: '1726249827513'
  alias: light_kitchen_main
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - light.kitchen_bulb_local
    to: 'on'
  - trigger: state
    entity_id:
    - light.kitchen_bulb
    to: 'on'
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: switch.socket_switch_local
      state: 'on'
    then:
    - action: switch.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: switch.socket_switch_local
  - if:
    - condition: state
      entity_id: light.philips_bulb_0ba9_light
      state: 'on'
    then:
    - action: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: light.philips_bulb_0ba9_light
  mode: single
- id: '1730621676810'
  alias: kitchen_presence
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.mi_move_sensor_occupancy
    to: 'on'
    enabled: true
    id: presence_detected
  - trigger: state
    entity_id:
    - binary_sensor.presence_tuya_presence
    to: 'off'
    for:
      hours: 0
      minutes: 3
      seconds: 0
    id: presence_clear
  - trigger: state
    entity_id:
    - binary_sensor.presence_tuya_presence
    to: 'on'
    for:
      hours: 0
      minutes: 3
      seconds: 0
    id: presence_kitchen
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - presence_detected
      sequence:
      - if:
        - condition: numeric_state
          entity_id: sensor.presence_tuya_illuminance
          below: 20
        then:
        - action: switch.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: switch.socket_switch_local
      - action: input_select.select_option
        metadata: {}
        data:
          option: Kitchen
        target:
          entity_id: input_select.my_place
    - conditions:
      - condition: trigger
        id:
        - presence_clear
      - condition: state
        entity_id: binary_sensor.presence_tuya_presence
        state: 'off'
      sequence:
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.socket_switch_local
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.kitchen_bulb
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.kitchen_bulb_local
        enabled: false
      - action: media_player.media_pause
        metadata: {}
        data: {}
        target:
          entity_id: media_player.yandex_station_m00tvb710hyxfg
    - conditions:
      - condition: trigger
        id:
        - presence_kitchen
      - condition: state
        entity_id: binary_sensor.presence_tuya_presence
        state: 'on'
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.philips_bulb_0ba9_light
        enabled: false
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.zigbee_switch_l1
        enabled: false
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.zigbee_switch_l2
        enabled: false
      - action: media_player.media_pause
        metadata: {}
        data: {}
        target:
          entity_id: media_player.alice_mini_room_ff98f0294a56d19578794aff
        enabled: false
  mode: single
- id: '1731842225627'
  alias: balcone_door_open_close
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.tuya_balcon_contact
    to: 'on'
    id: open
  - trigger: state
    entity_id:
    - binary_sensor.tuya_balcon_contact
    to: 'off'
    id: close
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - close
      sequence:
      - action: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: switch.humidifier_local
    - conditions:
      - condition: trigger
        id:
        - open
      sequence:
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.humidifier_local
  mode: single
- id: '1732220405685'
  alias: high_co2
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.cgllc_cgd1st_ca53_co2_density
    above: 800
  conditions:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.day_part
      state: Morning
    - condition: state
      entity_id: input_select.day_part
      state: Day
    - condition: state
      entity_id: input_select.day_part
      state: Evening
  actions:
  - action: notify.telegram
    metadata: {}
    data:
      message: Time to open window
  - if:
    - condition: state
      entity_id: input_select.day_part
      state: Evening
    - condition: state
      entity_id: input_select.home_come_leave
      state: Home
    then:
    - action: media_player.play_media
      metadata: {}
      data:
        media_content_type: text
        media_content_id: Необходимо проветрить в комнате
      target:
        entity_id:
        - media_player.alice_mini_room_ff98f0294a56d19578794aff
  mode: single
- id: '1735906041235'
  alias: time_period_change
  description: ''
  triggers:
  - trigger: time
    at: 08:00:00
    id: morning
  - trigger: time
    at: '12:00:00'
    id: day
  - trigger: time
    at: '19:00:00'
    id: evening
  - trigger: time
    at: 00:00:00
    id: night
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - morning
      sequence:
      - action: input_select.select_option
        metadata: {}
        data:
          option: Morning
        target:
          entity_id: input_select.day_part
    - conditions:
      - condition: trigger
        id:
        - day
      sequence:
      - action: input_select.select_option
        metadata: {}
        data:
          option: Day
        target:
          entity_id: input_select.day_part
    - conditions:
      - condition: trigger
        id:
        - evening
      sequence:
      - action: input_select.select_option
        metadata: {}
        data:
          option: Evening
        target:
          entity_id: input_select.day_part
    - conditions:
      - condition: trigger
        id:
        - night
      sequence:
      - action: input_select.select_option
        metadata: {}
        data:
          option: Night
        target:
          entity_id: input_select.day_part
  mode: single
- id: '1737493121571'
  alias: Travel
  description: ''
  triggers:
  - trigger: time
    at: '10:00:00'
    id: morning
  - trigger: time
    at: '19:00:00'
    id: evening
  - trigger: time
    at: '20:00:00'
    id: evening_light_on
  - trigger: time
    at: '22:00:00'
    id: evening_light_off
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - morning
      sequence:
      - action: cover.open_cover
        metadata: {}
        data: {}
        target:
          entity_id: cover.curtain_local
    - conditions:
      - condition: trigger
        id:
        - evening
      sequence:
      - action: cover.close_cover
        metadata: {}
        data: {}
        target:
          entity_id: cover.curtain_local
    - conditions:
      - condition: trigger
        id:
        - evening_light_on
      sequence:
      - action: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: switch.socket_switch_local
    - conditions:
      - condition: trigger
        id:
        - evening_light_off
      sequence:
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.socket_switch_local
  mode: single
- id: '1740162178858'
  alias: water_leak
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.water_sensor_water_leak
    to: 'on'
  conditions: []
  actions:
  - action: notify.telegram
    metadata: {}
    data:
      message: 'ALARM: water leak in the bathroom'
      title: ALARM
  mode: single
- id: '1746594980128'
  alias: morning_alarm
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.morning_alarm_state
    to: 'on'
  conditions:
  - condition: state
    entity_id: input_select.home_come_leave
    state: Home
  - condition: state
    entity_id: input_boolean.morning_alarm
    state: 'on'
  actions:
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.morning_alarm
  - action: script.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: script.yandex_tts_start_show
  - action: cover.open_cover
    metadata: {}
    data: {}
    target:
      entity_id: cover.curtain_curtain
  mode: single
